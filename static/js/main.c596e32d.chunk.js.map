{"version":3,"sources":["components/Modal/Modal.js","components/Event/Event.js","components/Grid/Grid.js","components/Calendar/Calendar.js","App.js","serviceWorker.js","index.js"],"names":["CreateModal","props","duration","active","modalMode","useContext","CalendarContext","columnHeight","eventList","seteventList","id","useState","event","setevent","title","fields","label","name","modalInfo","setModalInfo","useEffect","assignee","assigned","height","startTime","DateTime","fromMillis","parseInt","toJSDate","endTime","plus","cancelModal","className","aria-label","onClick","length","map","field","key","type","placeholder","value","onChange","e","target","handleChange","Event","cellRange","week","handleEdit","getMaxHeight","indexOfNext","days","day","indexOf","restOfDay","slice","time","Infinity","calculateEndTime","steps","console","log","fromJSDate","minutes","enable","bottom","grid","minHeight","size","width","onResizeStop","dir","ref","delta","maxHeight","resizedHeight","appliedHeight","newEndTime","handleResizeStop","Grid","handleCreate","i","control","style","getGrid","createContext","Calendar","today","local","mon","tue","wed","thu","fri","sat","sun","setweek","startOf","activeWeek","setactiveWeek","toFormat","displayMonthYear","setdisplayMonthYear","activeModal","setactiveModal","activeEventId","setactiveEvent","setmodalMode","weekDays","setweekDays","cellDuration","Duration","fromObject","hours","start","range","diff","weekCalculation","getTimeSlots","getWeekDisplay","getWeekDays","dur","slotRange","timeSlot","monday","tuesday","wednesday","thursday","friday","saturday","sunday","toLocaleString","TIME_24_SIMPLE","toMillis","toString","firstMonth","secondMonth","endOf","firstYear","secondYear","handleWeekChange","action","minus","arr","dayOfWeek","dayDisplayFormat","letters","number","formatted","date","Provider","Modal","hasSame","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c596e32d.chunk.js","sourcesContent":["import React, { useState, useEffect, useContext } from 'react'\r\nimport { DateTime } from 'luxon';\r\nimport { CalendarContext } from '../Calendar/Calendar';\r\n\r\nfunction CreateModal(props) {\r\n  const { duration, active, modalMode } = props;\r\n  const { columnHeight, eventList, seteventList, id } = useContext(CalendarContext);\r\n  const [event, setevent] = useState({});\r\n  const [modalInfo, setModalInfo] = useState({\r\n    title: '',\r\n    fields: [\r\n      { label: 'Title', name: 'title' }, { label: 'Assignee', name: 'assignee' }, { label: 'Assigned', name: 'assigned' }\r\n    ]\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (modalMode === 'create') {\r\n      setModalInfo({\r\n        ...modalInfo,\r\n        title: 'Please enter the required information',\r\n      });\r\n      setevent({\r\n        title: '',\r\n        assignee: '',\r\n        assigned: '',\r\n        height: columnHeight,\r\n        startTime: DateTime.fromMillis(parseInt(id)).toJSDate(),\r\n        endTime: DateTime.fromMillis(parseInt(id)).plus(duration).toJSDate()\r\n      });\r\n    } else if (modalMode === 'edit') {\r\n      setModalInfo({\r\n        ...modalInfo,\r\n        title: 'Please edit the required information',\r\n      });\r\n      setevent({\r\n        ...eventList[id]\r\n      });\r\n    } else if (modalMode === 'delete') {\r\n      setModalInfo({\r\n        ...modalInfo,\r\n        title: 'Are you sure you want to delete this entry?',\r\n      });\r\n    };\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    let { name, value } = e.target;\r\n    setevent({\r\n      ...event,\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  const acceptModal = () => {\r\n    seteventList({\r\n      ...eventList,\r\n      [id]: {\r\n        ...event\r\n      }\r\n    });\r\n    active(false);\r\n  };\r\n\r\n  const cancelModal = () => {\r\n    active(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"modal  is-active\">\r\n        <div className=\"modal-background\"></div>\r\n        <div className=\"modal-card\">\r\n          <header className=\"modal-card-head\">\r\n            <p className=\"modal-card-title\">{modalInfo.title}</p>\r\n            <button className=\"delete\" aria-label=\"close\" onClick={cancelModal}></button>\r\n          </header>\r\n          <section className=\"modal-card-body\">\r\n            {modalInfo.fields.length > 0 ? modalInfo.fields.map((field) =>\r\n              (\r\n                <div className=\"field\" key={`field_${field.name}`}>\r\n                  <div className=\"control\" key={`control_${field.name}`}>\r\n                    <input\r\n                      className=\"input is-small\"\r\n                      type=\"text\"\r\n                      placeholder={field.label}\r\n                      name={field.name}\r\n                      value={event[field.name] || ''}\r\n                      onChange={e => handleChange(e)}\r\n                    ></input>\r\n                  </div>\r\n                </div>\r\n              )) : null}\r\n          </section>\r\n          <footer className=\"modal-card-foot\">\r\n            <button className=\"button is-success\" onClick={acceptModal}>Yes</button>\r\n            <button className=\"button\" onClick={cancelModal}>No</button>\r\n          </footer>\r\n        </div>\r\n      </div >\r\n    </>\r\n  )\r\n};\r\n\r\nexport default CreateModal;\r\n","import React, { useContext } from 'react'\r\nimport { DateTime } from 'luxon';\r\nimport { Resizable } from 're-resizable';\r\nimport { CalendarContext } from '../Calendar/Calendar';\r\n\r\nfunction Event(props) {\r\n  const { id } = props;\r\n  const { cellRange, columnHeight, eventList, seteventList, week, handleEdit } = useContext(CalendarContext);\r\n  const { height } = eventList[id];\r\n\r\n  const handleResizeStop = (e, dir, ref, delta, id) => {\r\n    const maxHeight = getMaxHeight(id);\r\n    const resizedHeight = eventList[id].height + delta.height;\r\n    const appliedHeight = resizedHeight <= maxHeight ? resizedHeight : maxHeight;\r\n    const newEndTime = calculateEndTime(appliedHeight, id);\r\n    seteventList({\r\n      ...eventList,\r\n      [id]: {\r\n        ...eventList[id],\r\n        height: appliedHeight,\r\n        endTime: newEndTime\r\n      }\r\n    })\r\n  };\r\n\r\n  const getMaxHeight = (id) => {\r\n    let indexOfNext = -1\r\n    for (let days in week) {\r\n      let day = week[days]\r\n      if (day.indexOf(id) !== -1) {\r\n        //Check the next event in the day\r\n        let restOfDay = day.slice(day.indexOf(id) + 1)\r\n        for (const time of restOfDay) {\r\n          if (eventList[time]) {\r\n            indexOfNext = restOfDay.indexOf(time)\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (indexOfNext !== -1) {\r\n      return columnHeight * (indexOfNext + 1)\r\n    } else {\r\n      return Infinity\r\n    }\r\n  };\r\n\r\n  const calculateEndTime = (height, id) => {\r\n    const steps = height / columnHeight\r\n    console.log(id)\r\n    const startTime = DateTime.fromJSDate(eventList[id].startTime)\r\n    const endTime = startTime.plus({ minutes: (cellRange * steps) })\r\n    return endTime\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Resizable\r\n        className='calendar-resizable'\r\n        enable={{ bottom: true }}\r\n        grid={[0, (columnHeight)]}\r\n        key={id}\r\n        minHeight={columnHeight}\r\n        size={{ width: '100%', height: height }}\r\n        onClick={() => handleEdit(id)}\r\n        onResizeStop={(e, dir, ref, delta) => handleResizeStop(e, dir, ref, delta, id)}\r\n      >\r\n        {eventList[id].title}\r\n      </Resizable >\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Event\r\n","import React, { useContext } from 'react'\r\nimport Event from '../Event/Event';\r\nimport { CalendarContext } from '../Calendar/Calendar';\r\n\r\nfunction Grid(props) {\r\n  const { handleCreate } = props;\r\n  const { columnHeight, eventList, week } = useContext(CalendarContext)\r\n\r\n  const getGrid = () => {\r\n    let grid = []\r\n    for (let i = 0; i < week.control.length; i++) {\r\n      for (let day in week) {\r\n        let id = week[day][i]\r\n        grid = [...grid,\r\n        <div\r\n          className={day === 'control' ? 'calendar-column__control' : 'calendar-column'}\r\n          key={id}\r\n          style={{ 'height': `${columnHeight}px` }}\r\n          id={id}\r\n          onClick={!eventList[id] && day !== 'control' ? () => handleCreate(id) : null}\r\n        >\r\n          {eventList[id] ?\r\n            <Event\r\n              id={id}\r\n              eventList={eventList}\r\n              columnHeight={columnHeight}\r\n              week={week}\r\n            /> :\r\n            null}\r\n          {day === 'control' ? <p className='calendar-control'>{week.control[i]}</p> : null}\r\n        </div>\r\n        ]\r\n      }\r\n    }\r\n    return (\r\n      <div className='calendar-grid'>\r\n        {grid}\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      {getGrid()}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Grid\r\n","import React, { createContext, useState, useEffect } from 'react';\r\nimport { DateTime, Duration } from 'luxon';\r\nimport Modal from '../Modal/Modal';\r\nimport Grid from '../Grid/Grid';\r\n\r\nexport const CalendarContext = createContext();\r\n\r\nfunction Calendar() {\r\n  const today = DateTime.local();\r\n  const [week, setweek] = useState({ control: [], mon: [], tue: [], wed: [], thu: [], fri: [], sat: [], sun: [] });;\r\n  const [columnHeight, setcolumnHeight] = useState(30);\r\n  const [eventList, seteventList] = useState({});\r\n  const [cellRange, setcellRange] = useState(15);\r\n  const [activeWeek, setactiveWeek] = useState(today.startOf('week'));\r\n  const [displayMonthYear, setdisplayMonthYear] = useState(today.startOf('week').toFormat('LLLL yyyy'));\r\n  const [activeModal, setactiveModal] = useState(false);\r\n  const [activeEventId, setactiveEvent] = useState('');\r\n  const [modalMode, setmodalMode] = useState('');\r\n  const [weekDays, setweekDays] = useState([]);\r\n\r\n  const cellDuration = Duration.fromObject({ minutes: cellRange });\r\n  const startTime = Duration.fromObject({ hours: 8 });\r\n  const endTime = Duration.fromObject({ hours: 20 });\r\n  const start = DateTime.local().startOf('day').plus(startTime);\r\n  const end = DateTime.local().startOf('day').plus(endTime);\r\n  const range = end.diff(start, ['hours']).hours;\r\n\r\n  /* CONTEXT */\r\n\r\n  /* HOOKS */\r\n\r\n  useEffect(() => {\r\n    let weekCalculation = getTimeSlots();\r\n    setweek(weekCalculation);\r\n    setdisplayMonthYear(getWeekDisplay(activeWeek));\r\n    setweekDays(getWeekDays(activeWeek))\r\n  }, [activeWeek]);\r\n\r\n  useEffect(() => {\r\n    let weekCalculation = getTimeSlots();\r\n    setweek(weekCalculation);\r\n  }, [eventList]);\r\n\r\n  useEffect(() => {\r\n    let weekCalculation = getTimeSlots();\r\n    setweek(weekCalculation);\r\n  }, []);\r\n\r\n  /* WEEK */\r\n\r\n  const getTimeSlots = () => {\r\n    console.log('get time slots')\r\n    let dur = cellDuration;\r\n    let slotRange = range * 4\r\n    let timeSlot = start\r\n    let day = activeWeek.plus(startTime)\r\n    let monday = day\r\n    let tuesday = day.plus({ days: 1 })\r\n    let wednesday = day.plus({ days: 2 })\r\n    let thursday = day.plus({ days: 3 })\r\n    let friday = day.plus({ days: 4 })\r\n    let saturday = day.plus({ days: 5 })\r\n    let sunday = day.plus({ days: 6 })\r\n    let week = { control: [], mon: [], tue: [], wed: [], thu: [], fri: [], sat: [], sun: [] }\r\n    for (let i = 0; i <= slotRange; i++) {\r\n      week = {\r\n        ...week,\r\n        control: [...week.control, timeSlot.toLocaleString(DateTime.TIME_24_SIMPLE)],\r\n        mon: [...week.mon, monday.toMillis().toString()],\r\n        tue: [...week.tue, tuesday.toMillis().toString()],\r\n        wed: [...week.wed, wednesday.toMillis().toString()],\r\n        thu: [...week.thu, thursday.toMillis().toString()],\r\n        fri: [...week.fri, friday.toMillis().toString()],\r\n        sat: [...week.sat, saturday.toMillis().toString()],\r\n        sun: [...week.sun, sunday.toMillis().toString()],\r\n      }\r\n      timeSlot = timeSlot.plus(dur)\r\n      monday = monday.plus(dur)\r\n      tuesday = tuesday.plus(dur)\r\n      wednesday = wednesday.plus(dur)\r\n      thursday = thursday.plus(dur)\r\n      friday = friday.plus(dur)\r\n      saturday = saturday.plus(dur)\r\n      sunday = sunday.plus(dur)\r\n    }\r\n    return week\r\n  };\r\n\r\n  const getWeekDisplay = (activeWeek) => {\r\n    let firstMonth = activeWeek.startOf('week').toFormat('LLLL');\r\n    let secondMonth = activeWeek.endOf('week').toFormat('LLLL');\r\n    let firstYear = activeWeek.startOf('week').toFormat('yyyy');\r\n    let secondYear = activeWeek.endOf('week').toFormat('yyyy');\r\n    let displayReturn = '';\r\n    if (firstMonth !== secondMonth) {\r\n      if (firstYear !== secondYear) {\r\n        displayReturn = `${firstMonth} ${firstYear} - ${secondMonth} ${secondYear}`\r\n      } else {\r\n        displayReturn = `${firstMonth} - ${secondMonth} ${firstYear}`\r\n      }\r\n    } else {\r\n      displayReturn = activeWeek.startOf('week').toFormat('LLLL yyyy')\r\n    }\r\n    return displayReturn\r\n  };\r\n\r\n  const handleWeekChange = (action) => {\r\n    action === 'forward' ?\r\n      setactiveWeek(activeWeek.plus({ week: 1 })) :\r\n      setactiveWeek(activeWeek.minus({ week: 1 }))\r\n  }\r\n\r\n  const getWeekDays = (activeWeek) => {\r\n    let arr = []\r\n    for (let i = 0; i < 7; i++) {\r\n      let dayOfWeek = activeWeek.plus({ days: i })\r\n      let dayDisplayFormat = {\r\n        letters: dayOfWeek.toFormat('EEE'),\r\n        number: dayOfWeek.toFormat('dd')\r\n      }\r\n      arr = [...arr, {\r\n        formatted: dayDisplayFormat,\r\n        date: dayOfWeek\r\n      }]\r\n    }\r\n    return arr\r\n  }\r\n\r\n  /* DAY */\r\n\r\n  /* EVENT */\r\n\r\n  /* RENDER */\r\n\r\n  const handleCreate = (id) => {\r\n    setactiveEvent(id)\r\n    setmodalMode('create')\r\n    setactiveModal(true)\r\n  }\r\n\r\n  const handleEdit = (id) => {\r\n    setactiveEvent(id)\r\n    setmodalMode('edit')\r\n    setactiveModal(true)\r\n  }\r\n\r\n  return (\r\n    <div className='calendar'>\r\n      <CalendarContext.Provider value={{ cellRange, columnHeight, eventList, seteventList, week, handleEdit, id: activeEventId }}>\r\n        {activeModal ?\r\n          <Modal\r\n            duration={cellDuration}\r\n            active={setactiveModal}\r\n            modalMode={modalMode} /> :\r\n          null}\r\n        <div className=\"calendar-weekControl\">\r\n          <span className=\"calendar-weekControl__left\" onClick={() => handleWeekChange('back')}>\r\n            <i className=\"fas fa-arrow-circle-left\"></i>\r\n          </span>\r\n          <h1 className=\"calendar-weekControl__month\">\r\n            {displayMonthYear}\r\n          </h1>\r\n          <span className=\"calendar-weekControl__right\" onClick={() => handleWeekChange('forward')}>\r\n            <i className=\"fas fa-arrow-circle-right\"></i>\r\n          </span>\r\n        </div>\r\n        <div className='calendar-header'><div className='calendar-header__element-first'></div>\r\n          {weekDays.length > 0 ? weekDays.map((day) => (\r\n            <div key={day.formatted.letters} className='calendar-header__element'>\r\n              <span className='calendar-letters'>\r\n                {day.formatted.letters}\r\n              </span>\r\n              <span className={\r\n                today.hasSame(day.date, 'day') ?\r\n                  'calendar-today' :\r\n                  'calendar-notToday'\r\n              }>\r\n                {day.formatted.number}\r\n              </span>\r\n            </div>\r\n          )) : null}\r\n        </div>\r\n        <Grid\r\n          cellRange={cellRange}\r\n          handleCreate={handleCreate}\r\n        />\r\n      </CalendarContext.Provider>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Calendar\r\n","import React from 'react';\nimport './App.scss';\nimport '../node_modules/@fortawesome/fontawesome-free/css/all.css'\nimport Calendar from './components/Calendar/Calendar';\n\n// if (process.env.NODE_ENV !== 'production') {\n//   const { whyDidYouUpdate } = require('why-did-you-update')\n//   whyDidYouUpdate(React)\n// }\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/* <Calendar /> */}\n      <Calendar />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}